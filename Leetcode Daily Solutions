                                                                           Perfect Number 
Solution:-----------------------------------------------------------------------------------------------------------------------------------------------------------------
class Solution {
public:
    bool checkPerfectNumber(int num) {
        int sum=0;
        for(int i=1;i*i<num;i++)
        {
            if(num%i==0)
            {
                sum+=i;
                if(i*i!=num)
                {
                    sum+=num/i;
                }

            }
        }

        return (sum-num==num);

    }
};
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SQL QUERY :
Group Sold Product By The Date:
Solution:

SELECT sell_date, COUNT(DISTINCT product) AS num_sold, GROUP_CONCAT(DISTINCT product SEPARATOR ',') AS products
FROM Activities
GROUP BY sell_date
ORDER BY sell_date ASC

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Climbing Stairs :
Solution :

class solution {
public:
     int climbStairs(int n)
     {
       int a=0,b=1,c=0;
       for(int i=0 ; i<n; i++)
       {
          c=a+b;
          a=b;
          b=c;
       }
       return c ;
      }
 };
 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Minimum Falling Path Sum :
Solution :

class Solution {
public:
    int minFallingPathSum(vector<vector<int>>& matrix) {
       int n=matrix.size();
       for(int i=1;i<n;i++){
           for(int j=0;j<n;j++){
               matrix[i][j]+=min({matrix[i-1][j],matrix[i-1][max(0,j-1)],matrix[i-1][min(n-1,j+1)]});
           }
       } 
       return *min_element(matrix[n-1].begin(),matrix[n-1].end());
    }
};

------------------------------------------------------------------------------------------------------------------------------------------------------------------------

